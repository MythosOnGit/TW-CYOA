tags: Tutorial
title: Tutorial 8
caption: Tutorial 8: Exclusions
description: Creating sets of mutually exclusive pages.
tmap.id: 2c92efa3-81c2-4e27-8ea4-8503b7b8dbe4

\rules except wikilink

Another natural pattern that may crop up are cases where certain collections tracked pages should never have more than one of them set. Either This is because they occur on different story paths, or they represent mutually exclusive concepts. ''These pages are exclusive to one another.''

Let's imagine a case with pages <<page happy>>, <<page angry>>, and <<page sad>>. Your protagonist can only be one of these at a time. You can handle this by making sure that when any of these pages are visited, the other emotion pages are reset. This works in simple cases, but it's error-prone. Suppose <<page happy>> is only touched rather than visited. The touching page must make sure to reset the other emotion pages.

Instead, you can use an exclusion set. In our example, let's call this set <<page emotions>>. You can assign <<page happy>>, <<page angry>>, and <<page sad>> to this set, and then whenever any of them are touched or visited, the others reset automatically. This scales much more effectively, and new pages can be added to the exclusion set without any existing pages needing to be touched.

! How

To specify that a given page should be in an exclusion set, give that page a <<field cyoa.exclude>> field that specifies a name. That, and any other pages which also have that name in their <<field cyoa.exclude>> field will all be together in an exclusion set by that name. [[However, if your exclusion set names have spaces in them, you must list them a little more carefully.|Pages with Spaces]]

In TiddlyMap, exclusions set are only represented if the a tiddler representing the exclusion set itself is on the graph. Salmon-colored dotted lines will connect any pages in that set to this exclusion tiddler. You can add other pages to this set by drawing edges from those pages to the exclusion tiddler and specifying an edge type of "tw-list:cyoa.exclude". If the exclusion set is not represented on a graph, you must manually add pages to the set by adding the field to the tiddler as described above.

! Multiple groups

As mentioned above, <<field cyoa.exclude>> is a list field, because pages can be included in multiple exclusion sets. These sets can overlap as much or as little as you'd like. Take our <<page emotions>> example above. Let's say your protagonist can be cursed with <<page "anhedone's_curse">> which makes it so he cannot be happy. We put this page and <<page happy>> in an exclusion set called <<page happy_state>>. If the curse is set, happiness resets. The protagonist cannot be happy and have the curse, but since neither <<page angry>> or <<page sad>> are in the <<page happy_state>> exclusive set, those can be set while <<page "anhedone's_curse">> is also set. If <<page happy>> is touched, then pages <<page angry>>, <<page sad>>, and <<page "anhedone's_curse">> all reset.

! Limitations

Exclusion sets can be as intricate and as overlapped as you'd like. However, two pages cannot be in the same exclusion set if one implies the other. That would be a logical impossibility.

! Demo

Here is an annotated example project that shows off how implications and exclusions can be utilized effectively: <<demo>>

<<next Tutorial>>
